(function(root){"use strict";function ASRService(){var self=this;var ws={};var userObj={userName:"",role:"",token:null,userStatus:"offline"};var configObj;var timer;var INVALID_STATUS=4e3,ERROR_STATUS=4001,FINISH_STATUS=1e3,NETWORK_STATUS=4002;var lastPingTime=0,PING_INTERVAL=1e4,lastBeatingTime=0,MAX_HEARTBEAT_INTERVAL=12e4;var DEBUGLEVEL="debug";var ERROR={HEARTBEATING_TIMEOUT:90001,RECONNECT_SERVER:90002,IP_ERROR:90003,NotAllowedError:90004,NotFoundError:90005,AbortError:90006,NotReadableError:90007,OverConstrainedError:90008,SecurityError:90009,TypeError:90010,RoleError:90011,DataError:90012,WSEorror:90013,WSNotSupport:90017};this.onMessageCB=function(param){if(userObj.consoleLevel==DEBUGLEVEL){console.log("onMessageCB",param)}};this.onTipCB=function(param){if(userObj.consoleLevel==DEBUGLEVEL){console.log("onTipCB",param)}};this.onStopServiceCB=function(param){if(userObj.consoleLevel==DEBUGLEVEL){console.log("onStopServiceCB",param)}};this.onInited=function(param){if(userObj.consoleLevel==DEBUGLEVEL){console.log("onInited",param)}};function sendMessage(message){return new Promise(function(resolve,reject){if(ws&&ws.readyState===1){if(userObj.consoleLevel==DEBUGLEVEL){console.log("send message--: ",message)}ws.send(message);resolve({code:0,msg:"success"})}else{if(userObj.consoleLevel==DEBUGLEVEL){console.log("send message error websocket is closed: ",message)}resolve({code:ERROR.WSEorror,msg:"this websocket is closed"})}})}function sendUserInfo(){var message={type:"login",data:configObj};sendMessage(JSON.stringify(message)).then(function(res){if(res.code!=0){if(self.onTipCB){self.onTipCB(res.msg,res.code)}}})}function recognizedata(data){var arrb=base64ToUint8Array(data);return sendMessage(arrb.buffer)}function sendAsrAudio(data){if(data&&data.buffer){return sendMessage(data.buffer)}}function base64ToUint8Array(base64String){var padding="=".repeat((4-base64String.length%4)%4);var base64=(base64String+padding).replace(/\-/g,"+").replace(/_/g,"/");var rawData=window.atob(base64);var message=rawData;var outputArray=new Uint8Array(message.length);for(var i=0;i<message.length;++i){outputArray[i]=message.charCodeAt(i)}return outputArray}function sendAsrContent(data){if(!data){return new Promise(function(resolve,reject){resolve({code:ERROR.DataError,msg:"data is null"})})}else{var message={type:"textAsr",data:data};message.data.interactionType=1;return sendMessage(JSON.stringify(message))}}function setWakeupStatus(data){if(!data){return new Promise(function(resolve,reject){resolve({code:ERROR.DataError,msg:"data is null"})})}else{var message={type:"wakeupStatus",data:data};return sendMessage(JSON.stringify(message))}}function _keepAlive(){var now=(new Date).getTime();if(now-lastPingTime>PING_INTERVAL){try{lastPingTime=now;_ping()}catch(e){}}if(now-lastBeatingTime>MAX_HEARTBEAT_INTERVAL){if(self.onTipCB){self.onTipCB("heart beating timeout",ERROR.HEARTBEATING_TIMEOUT)}stop();userObj.userStatus="offline";ws.close(ERROR_STATUS)}}function _ping(){var message={type:"ping"};return sendMessage(JSON.stringify(message)).then(function(res){if(res.code==0){lastBeatingTime=(new Date).getTime()}})}function startService(){var interval=1e4;if(timer){clearInterval(timer)}timer=setInterval(function(){_keepAlive()},interval)}function stopService(){try{if(timer){clearInterval(timer)}}catch(e){console.warn(e)}}function stop(){userObj.userStatus="offline";if(ws&&ws.readyState==1){ws.close(FINISH_STATUS)}}function init(obj,url,consoleLevel){userObj.consoleLevel=consoleLevel;if(userObj.consoleLevel==DEBUGLEVEL){console.log("init config")}window.WebSocket=window.WebSocket||window.MozWebSocket;if(!window.WebSocket){console.warn("Your browser doesn't support WebSocket");if(self.onTipCB){self.onTipCB("Your browser doesn't support WebSocket",ERROR.WSNotSupport)}return}ws=new WebSocket(url.replace("http://","ws://").replace("https://","wss://"));ws.onopen=function(){configObj=obj;userObj=Object.assign(userObj,obj);if(userObj.consoleLevel==DEBUGLEVEL){console.log("onopen");console.dir(ws)}sendUserInfo()};ws.onmessage=function(event){lastBeatingTime=(new Date).getTime();var messageStr=event.data;if(userObj.consoleLevel==DEBUGLEVEL){console.log("onmessage",messageStr)}if(event.data){try{var paramMsg=JSON.parse(messageStr);if(paramMsg.code==201){if(self.onInited){self.onInited("ws is open");startService();userObj.userStatus="online"}}else if(paramMsg.code==202||paramMsg.code==203){}else{if(self.onMessageCB){self.onMessageCB(messageStr)}}}catch(e){console.warn("onmessage 解析出错，数据类型："+typeof messageStr+", 数据：",messageStr);console.warn("onmessage 解析出错",e)}}};ws.onerror=function(event){if(userObj.consoleLevel==DEBUGLEVEL){console.log("WS error: "+JSON.stringify(event))}};function reInit(){if(window.navigator.onLine===true){if(userObj.consoleLevel==DEBUGLEVEL){console.log("web端网络正常,调用websocket.init进行重连!")}init(obj,url,consoleLevel)}else{if(userObj.consoleLevel==DEBUGLEVEL){console.log("web端网络断开, 5s后重新检测!")}setTimeout(function(){if(userObj.userStatus!="offline"){reInit()}else{if(self.onStopServiceCB){self.onStopServiceCB("finish")}}},5e3)}}ws.onclose=function(event){if(userObj.consoleLevel==DEBUGLEVEL){console.log("-----------onclose-time:"+(new Date).getTime());console.log("WS closed: "+JSON.stringify(event.code)+"-"+event.reason)}var status;if(event.code==INVALID_STATUS){status="invalid"}else if(event.code==ERROR_STATUS){status="error"}else if(event.code==FINISH_STATUS){status="finish"}else{status=event.code}stopService();ws=undefined;if(userObj.consoleLevel==DEBUGLEVEL){console.log("status: "+status)}if(status=="invalid"||status=="error"||status=="finish"||userObj.userStatus=="offline"){if(self.onStopServiceCB){self.onStopServiceCB(status)}}else{if(userObj.consoleLevel==DEBUGLEVEL){console.log("------ws disconnect, reconnet, 调用reInit...------")}if(self.onTipCB){self.onTipCB("disconnect with the server, try to reconnect",ERROR.RECONNECT_SERVER)}reInit()}}}this.init=init;this.recognizeData=recognizedata;this.sendAsrContent=sendAsrContent;this.sendAsrAudio=sendAsrAudio;this.setWakeupStatus=setWakeupStatus;this.stop=stop}if(typeof define=="function"&&define.amd){define("ASRService",[],function(){return ASRService})}else if(typeof module!=="undefined"&&typeof module.exports!=="undefined"){module.exports=ASRService}else if(typeof root!=="undefined"){root.ASRService=ASRService}else{return ASRService}})(this);